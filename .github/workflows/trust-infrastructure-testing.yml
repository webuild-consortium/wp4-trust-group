name: Trust Infrastructure Testing

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'task4-trust-infrastructure-api/**'
      - 'task5-participants-certificates-policies/**'
      - 'task6-wallet-conformance-interop/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'task4-trust-infrastructure-api/**'
      - 'task5-participants-certificates-policies/**'
      - 'task6-wallet-conformance-interop/**'

jobs:
  trust-api-testing:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: trust_infrastructure_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Run Trust Infrastructure API tests
      run: |
        pytest task4-trust-infrastructure-api/tests/ -v --cov=task4-trust-infrastructure-api/src
    
    - name: Run Participants Certificates and Policies tests
      run: |
        pytest task5-participants-certificates-policies/tests/ -v --cov=task5-participants-certificates-policies/src
    
    - name: Run Wallet Conformance tests
      run: |
        pytest task6-wallet-conformance-interop/tests/ -v --cov=task6-wallet-conformance-interop/src

  integration-testing:
    runs-on: ubuntu-latest
    needs: trust-api-testing
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: trust_infrastructure_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Start Trust Infrastructure services
      run: |
        docker-compose -f docker-compose.test.yml up -d
        sleep 30
    
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --timeout=300
    
    - name: Run end-to-end tests
      run: |
        pytest tests/e2e/ -v --timeout=600
    
    - name: Stop services
      run: |
        docker-compose -f docker-compose.test.yml down

  performance-testing:
    runs-on: ubuntu-latest
    needs: integration-testing
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Start Trust Infrastructure services
      run: |
        docker-compose -f docker-compose.performance.yml up -d
        sleep 60
    
    - name: Run load tests
      run: |
        locust -f tests/performance/load_test.py --headless -u 100 -r 10 -t 300s --html=load_test_report.html
    
    - name: Run stress tests
      run: |
        locust -f tests/performance/stress_test.py --headless -u 500 -r 50 -t 600s --html=stress_test_report.html
    
    - name: Upload performance reports
      uses: actions/upload-artifact@v3
      with:
        name: performance-reports
        path: |
          load_test_report.html
          stress_test_report.html
    
    - name: Stop services
      run: |
        docker-compose -f docker-compose.performance.yml down

  security-testing:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Run OWASP ZAP security scan
      run: |
        docker run -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:8080
    
    - name: Run bandit security scan
      run: |
        bandit -r src/ -f json -o bandit-report.json
    
    - name: Run safety dependency check
      run: |
        safety check --json --output safety-report.json
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
